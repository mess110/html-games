// Generated by CoffeeScript 1.12.7
var Level;

Level = (function() {
  function Level() {
    this.score = 0;
    this.highScore = Persist.getLocalHighScore();
    this.speed = Config.defaultLowSpeed;
    this.canStartGame = true;
    this.running = false;
    this.setMenuVisible(true);
  }

  Level.prototype.setMenuVisible = function(visible) {
    var visibility;
    this._updateScoreUI();
    this._updateHighScoreUI();
    visibility = visible ? 'visible' : 'hidden';
    window.start.style.visibility = visibility;
    window.burgerMenu.style.visibility = visibility;
    if (this.highScore > 0) {
      window.highScore.style.visibility = visibility;
      window.highScorePlayerName.style.visibility = visibility;
    }
    return window.buff.innerHTML = '';
  };

  Level.prototype.start = function() {
    var scene;
    PoolManager.releaseAll();
    setDifficulty(Persist.get(Config.storage.difficulty));
    this.highSpeed = Config.defaultHighSpeed;
    this.lowSpeed = Config.defaultLowSpeed;
    this.target = Config.defaultLowSpeed;
    Config.createBonus = 1;
    this.canStartGame = false;
    this.running = true;
    this.setMenuVisible(false);
    this.resetScore();
    scene = SceneManager.currentScene();
    scene.replay.clear();
    scene.chicken.reset();
    scene.shootTicker.reset();
    scene.enemyTicker.reset();
    scene.buffTicker.reset();
    return scene.shootTicker.shoot();
  };

  Level.prototype.stop = function() {
    var isHighScore, scene;
    scene = SceneManager.currentScene();
    isHighScore = false;
    this.running = false;
    scene.replay.replaying = false;
    window.wasted.style.visibility = 'hidden';
    scene.chicken.setStartPosition();
    scene.terrain.resetSpeed();
    scene.pointer.hide();
    scene.level.setLowSpeed();
    PoolManager.releaseAll();
    window.scorePlayerNameInput.value = Persist.getPlayerName();
    window.addScorePage.style.display = 'flex';
    window.buff.innerHTML = '';
    return this._updateScoreUI();
  };

  Level.prototype.delayedStart = function() {
    this.setMenuVisible(true);
    window['coffee-engine-dom'].style.filter = 'grayscale(0)';
    return setTimeout((function(_this) {
      return function() {
        return _this.canStartGame = true;
      };
    })(this), 250);
  };

  Level.prototype.resetScore = function() {
    this.score = 0;
    return this._updateScoreUI();
  };

  Level.prototype.addPoints = function(amount) {
    this.score += amount;
    return this._updateScoreUI();
  };

  Level.prototype._updateScoreUI = function() {
    return window.score.innerHTML = this.score;
  };

  Level.prototype._updateHighScoreUI = function() {
    window.highScore.innerHTML = this.highScore;
    return window.highScorePlayerName.innerHTML = Persist.getHighScorePlayerName();
  };

  Level.prototype.setLowSpeed = function() {
    return this.target = this.lowSpeed;
  };

  Level.prototype.setHighSpeed = function() {
    return this.target = this.highSpeed;
  };

  Level.prototype.addSpeed = function(amount) {
    if (amount == null) {
      amount = 0.25;
    }
    if (this.lowSpeed + amount < 0) {
      return;
    }
    this.highSpeed += amount;
    this.lowSpeed += amount;
    return this.target += amount;
  };

  Level.prototype.tick = function(tpf) {
    if (this.speed < this.target) {
      this.speed = Helper.addWithMinMax(this.speed, tpf * 10, this.speed, this.target);
    }
    if (this.speed > this.target) {
      return this.speed = Helper.addWithMinMax(this.speed, -tpf * 10, this.target, this.speed);
    }
  };

  return Level;

})();
