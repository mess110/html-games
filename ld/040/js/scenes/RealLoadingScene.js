// Generated by CoffeeScript 1.12.7
var RealLoadingScene,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

RealLoadingScene = (function(superClass) {
  extend(RealLoadingScene, superClass);

  function RealLoadingScene(urls) {
    this.engine = Hodler.item('engine');
    RealLoadingScene.__super__.constructor.call(this, urls);
  }

  RealLoadingScene.prototype.preStart = function() {
    var camera, hemi, point;
    camera = LoadingScene.LOADING_OPTIONS.camera;
    camera.position.set(0, 5, 10);
    camera.lookAt(Helper.zero);
    this.engine.setCamera(camera);
    Hodler.item('afterEffects').enable(this.scene, camera);
    this.scene.add(Helper.ambientLight());
    this.scene.add(Helper.ambientLight());
    point = Helper.pointLight({
      distance: 10
    });
    point.position.y = 5;
    this.scene.add(point);
    hemi = Helper.hemiLight();
    hemi.position.set(0, 100, 0);
    this.scene.add(hemi);
    this.text = new BaseText({
      w: 8,
      h: 8,
      fillStyle: 'white',
      font: '82px smackem',
      align: 'center',
      text: 'Smack-Em!'
    });
    this.text.mesh.position.set(0, -5, 0);
    return this.scene.add(this.text.mesh);
  };

  RealLoadingScene.prototype.uninit = function() {
    RealLoadingScene.__super__.uninit.call(this);
    return Hodler.item('afterEffects').disable();
  };

  RealLoadingScene.prototype.hasFinishedLoading = function() {
    var assets, mole;
    this.hasFinishedLoading = function() {
      if (engine.uptime > 2000) {
        return this.engine.initScene(Hodler.item('gameScene'));
      } else {
        return setTimeout((function(_this) {
          return function() {
            return _this.engine.initScene(Hodler.item('gameScene'));
          };
        })(this), 2000 - this.engine.uptime);
      }
    };
    assets = CinematicScene.getAssets('start');
    mole = this.jmm.clone('mole');
    this.scene.add(mole);
    return this.loadAssets(assets);
  };

  return RealLoadingScene;

})(LoadingScene);
